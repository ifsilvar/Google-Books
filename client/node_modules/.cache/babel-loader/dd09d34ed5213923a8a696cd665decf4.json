{"ast":null,"code":"import _slicedToArray from \"/Users/ivanflores/Desktop/UCI_HW/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ivanflores/Desktop/UCI_HW/Google-Books/client/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport API from \"../utils/API.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  // Setting our component's initial state\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1]; // const [formObject, setFormObject] = useState({})\n  // Load all books and store them with setBooks\n\n\n  useEffect(() => {\n    handleChange();\n  }, []); // const handleChange = events => {\n  //     const inputValue = events.target.value\n  //     API.searchBook(inputValue).then((data) => {\n  //         console.log(data)\n  //     })\n  // }\n\n  const handleChange = events => {\n    const inputValue = events.target.value;\n    API.searchBook(inputValue).then(data => {\n      console.log(data);\n      setBooks(data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: Search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"ivRf7A8lTbIZ8hXp0o9rI5HM5uk=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/ivanflores/Desktop/UCI_HW/Google-Books/client/src/pages/Search.js"],"names":["axios","React","API","Search","useState","books","setBooks","useEffect","handleChange","events","inputValue","target","value","searchBook","then","data","console","log","catch","err"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AACzB;AADyB,oBAECC,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAElBC,KAFkB;AAAA,QAEXC,QAFW,kBAGzB;AAEA;;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT,CANyB,CAU7B;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMA,YAAY,GAAGC,MAAM,IAAI;AAC3B,UAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAjC;AACAV,IAAAA,GAAG,CAACW,UAAJ,CAAeH,UAAf,EAA2BI,IAA3B,CAAiCC,IAAD,IAAU;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACH,KAHD,EAICG,KAJD,CAIOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJd;AAKH,GAPD;;AASA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEX;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEL;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQE;;GAjCkBA,M;;KAAAA,M","sourcesContent":["import axios from \"axios\"\nimport React from \"react\"\nimport API from \"../utils/API.js\"\n\nexport default function Search() {\n        // Setting our component's initial state\n        const [books, setBooks] = useState({})\n        // const [formObject, setFormObject] = useState({})\n      \n        // Load all books and store them with setBooks\n        useEffect(() => {\n          handleChange()\n        }, [])\n\n    // const handleChange = events => {\n    //     const inputValue = events.target.value\n    //     API.searchBook(inputValue).then((data) => {\n    //         console.log(data)\n    //     })\n    // }\n    const handleChange = events => {\n        const inputValue = events.target.value\n        API.searchBook(inputValue).then((data) => {\n            console.log(data)\n            setBooks(data)\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <form>\n                <input type=\"text\" onChange={handleChange}/>\n                <h1>Search Page</h1>\n                <button type=\"submit\" onClick={Search}></button>\n            </form>\n        </div>\n    )}"]},"metadata":{},"sourceType":"module"}