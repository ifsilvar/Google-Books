{"ast":null,"code":"import _slicedToArray from \"/Users/ivanflores/Desktop/UCI_HW/Google-Books/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ivanflores/Desktop/UCI_HW/Google-Books/client/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API.js\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  // Setting our component's initial state\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookSearch = _useState4[0],\n        setBookSearch = _useState4[1]; // Load all books and store them with setBooks\n  // useEffect(() => {\n  //     loadBooks()\n  // }, [])\n  // function loadBooks(event) {\n  // console.log(events)\n  // const inputValue = event.srcElement\n  // API.searchBook(inputValue).then((data) => {\n  //     console.log(data.data.items)\n  //     setBooks(data.data.items)\n  // })\n  // .catch(err => console.log(err));\n\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setBookSearch(value);\n  };\n\n  const handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n    event.preventDefault();\n    API.searchBook(bookSearch).then(data => {\n      console.log(data.data.items);\n      setBooks(data.data.items);\n    }) //   .then(res => setBooks(data.data.items))\n    .catch(err => console.log(err));\n  }; // const handleChange = events => {\n  //     const inputValue = events.target.value\n  //     API.searchBook(inputValue).then((data) => {\n  //         console.log(data)\n  //     })\n  // }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"search\",\n      value: bookSearch,\n      onChange: handleInputChange,\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      type: \"success\",\n      className: \"input-lg\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: books.map(book => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: book.volumeInfo.infoLink,\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [book.volumeInfo.title, \" by \", book.volumeInfo.authors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this)]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"N/SqTe1/kyPiDUdMX48/ESqAuLc=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/ivanflores/Desktop/UCI_HW/Google-Books/client/src/pages/Search.js"],"names":["axios","React","useEffect","useState","API","DeleteBtn","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Search","books","setBooks","bookSearch","setBookSearch","handleInputChange","event","value","target","handleFormSubmit","preventDefault","searchBook","then","data","console","log","items","catch","err","map","book","volumeInfo","infoLink","title","authors","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AACzB;AADyB,oBAECX,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAElBY,KAFkB;AAAA,QAEXC,QAFW;;AAAA,qBAGWb,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,QAGlBc,UAHkB;AAAA,QAGNC,aAHM,kBAKzB;AACA;AACA;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAAA,UACvBC,KADuB,GACbD,KAAK,CAACE,MADO,CACvBD,KADuB;AAE/BH,IAAAA,aAAa,CAACG,KAAD,CAAb;AACD,GAHH;;AAKA,QAAME,gBAAgB,GAAGH,KAAK,IAAI;AAC9B;AACAA,IAAAA,KAAK,CAACI,cAAN;AACApB,IAAAA,GAAG,CAACqB,UAAJ,CAAeR,UAAf,EACKS,IADL,CACWC,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAL,CAAUG,KAAtB;AACAd,MAAAA,QAAQ,CAACW,IAAI,CAACA,IAAL,CAAUG,KAAX,CAAR;AACH,KAJL,EAKA;AALA,KAMGC,KANH,CAMSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CANhB;AAOD,GAVH,CAvBqB,CAmCrB;AACI;AACA;AACI;AACA;AACA;AACJ;;;AAEZ,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,KAAK,EAAEf,UAFP;AAGA,MAAA,QAAQ,EAAEE,iBAHV;AAIA,MAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI;AACI,MAAA,OAAO,EAAEI,gBADb;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,SAAS,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAiBI,QAAC,IAAD;AAAA,gBACKR,KAAK,CAACkB,GAAN,CAAUC,IAAI,IAAI;AACjB,4BACE,QAAC,QAAD;AAAA,kCACI;AAAG,YAAA,IAAI,EAAEA,IAAI,CAACC,UAAL,CAAgBC,QAAzB;AAAA,mCACA;AAAA,yBACGF,IAAI,CAACC,UAAL,CAAgBE,KADnB,UAC8BH,IAAI,CAACC,UAAL,CAAgBG,OAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAME,QAAC,SAAD;AAAW,YAAA,OAAO,EAAE,MAAK,CAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAAeJ,IAAI,CAACK,EAApB;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADL;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCE;;GA7EkBzB,M;;KAAAA,M","sourcesContent":["import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API.js\"\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nexport default function Search() {\n        // Setting our component's initial state\n        const [books, setBooks] = useState([])\n        const [bookSearch, setBookSearch] = useState(\"\")\n      \n        // Load all books and store them with setBooks\n        // useEffect(() => {\n        //     loadBooks()\n        // }, [])\n        \n        // function loadBooks(event) {\n            // console.log(events)\n            // const inputValue = event.srcElement\n            // API.searchBook(inputValue).then((data) => {\n            //     console.log(data.data.items)\n            //     setBooks(data.data.items)\n            // })\n            // .catch(err => console.log(err));\n            const handleInputChange = event => {\n                const { value } = event.target;\n                setBookSearch(value);\n              };\n\n            const handleFormSubmit = event => {\n                // When the form is submitted, prevent its default behavior, get recipes update the recipes state\n                event.preventDefault();\n                API.searchBook(bookSearch)\n                    .then((data) => {\n                        console.log(data.data.items)\n                        setBooks(data.data.items)\n                    })\n                //   .then(res => setBooks(data.data.items))\n                  .catch(err => console.log(err));\n              };\n\n            // const handleChange = events => {\n                //     const inputValue = events.target.value\n                //     API.searchBook(inputValue).then((data) => {\n                    //         console.log(data)\n                    //     })\n                    // }\n                // }\n\n    return (\n        <div>\n\n            <h1>Search Page</h1>\n            <input \n            name=\"search\" \n            value={bookSearch}\n            onChange={handleInputChange}\n            placeholder=\"search\"\n            />\n\n            <button\n                onClick={handleFormSubmit}\n                type=\"success\"\n                className=\"input-lg\"\n                >Search\n            </button>\n\n            <List>\n                {books.map(book => {\n                  return (\n                    <ListItem key={book.id}>\n                        <a href={book.volumeInfo.infoLink}>\n                        <strong>\n                          {book.volumeInfo.title} by {book.volumeInfo.authors}\n                        </strong>\n                        </a>\n                      <DeleteBtn onClick={() =>{}} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n\n        </div>\n    )}"]},"metadata":{},"sourceType":"module"}