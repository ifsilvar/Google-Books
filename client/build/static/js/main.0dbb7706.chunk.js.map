{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/DeleteBtn/DeleteBtn.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/TextArea.js","components/Form/FormBtn.js","pages/Books/Books.js","components/Nav/Nav.js","App.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","className","DeleteBtn","props","role","tabIndex","axios","get","id","delete","bookData","post","Col","size","split","map","join","Container","fluid","Row","List","ListItem","Input","TextArea","rows","FormBtn","float","marginBottom","Books","useState","books","setBooks","title","author","synopsis","formObject","setFormObject","loadBooks","API","then","res","data","catch","err","console","log","handleInputChange","event","target","name","value","useEffect","onChange","placeholder","disabled","onClick","preventDefault","length","book","key","_id","href","deleteBook","Nav","App","ReactDOM","render","document","getElementById"],"mappings":"qOAaeA,MAXf,UAAmB,SAAEC,IACnB,OACE,yBACEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEC,UAAU,aAETN,I,MCKQO,MARf,SAAmBC,GACjB,OACE,wCAAMF,UAAU,cAAiBE,EAAjC,CAAwCC,KAAK,SAASC,SAAS,MAA/D,W,gBCLW,EAEH,WACR,OAAOC,IAAMC,IAAI,eAHN,EAUD,SAASC,GACnB,OAAOF,IAAMG,OAAO,cAAgBD,IAXzB,EAcH,SAASE,GACjB,OAAOJ,IAAMK,KAAK,aAAcD,ICb7B,SAASE,GAAI,KAAEC,EAAF,SAAQlB,IAC1B,OACE,yBACEM,UAAWY,EACRC,MAAM,KACNC,IAAIF,GAAQ,OAASA,GACrBG,KAAK,MAEPrB,GCTA,SAASsB,GAAU,MAAEC,EAAF,SAASvB,IACjC,OAAO,yBAAKM,UAAS,mBAAciB,EAAQ,SAAW,KAAOvB,GCDxD,SAASwB,GAAI,MAAED,EAAF,SAASvB,IAC3B,OAAO,yBAAKM,UAAS,aAAQiB,EAAQ,SAAW,KAAOvB,G,MCDlD,SAASyB,GAAK,SAAEzB,IACrB,OACE,yBAAKM,UAAU,2BACb,wBAAIA,UAAU,cAAcN,ICJ3B,SAAS0B,GAAS,SAAE1B,IACzB,OAAO,wBAAIM,UAAU,mBAAmBN,GCDnC,SAAS2B,EAAMnB,GACpB,OACE,yBAAKF,UAAU,cACb,yCAAOA,UAAU,gBAAmBE,KCHnC,SAASoB,EAASpB,GACvB,OACE,yBAAKF,UAAU,cACb,4CAAUA,UAAU,eAAeuB,KAAK,MAASrB,KCHhD,SAASsB,EAAQtB,GACtB,OACE,4CAAYA,EAAZ,CAAmBP,MAAO,CAAE8B,MAAO,QAASC,aAAc,IAAM1B,UAAU,oBACvEE,EAAMR,UC0HEiC,MAvHf,WAAiB,QAEWC,mBAAS,IAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAGqBF,mBAAS,CAC3CG,MAAO,GACPC,OAAQ,GACRC,SAAU,KANG,mBAGRC,EAHQ,KAGIC,EAHJ,KAef,SAASC,IACPC,IACGC,KAAKC,GACJT,EAASS,EAAIC,OAEdC,MAAMC,GAAOC,QAAQC,IAAIF,IAW9B,SAASG,EAAkBC,GAAQ,MAAD,EACRA,EAAMC,OAAtBC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,MACdd,EAAc,2BAAID,GAAL,IAAiB,CAACc,GAAOC,KAuBtC,OA9CFC,oBAAU,KACRd,KACC,IA6CC,kBAACpB,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAD,KACE,kBAACP,EAAD,CAAKC,KAAK,QACR,kBAAC,EAAD,KACE,0DAEF,8BACE,kBAACS,EAAD,CACE8B,SAAUN,EACVG,KAAK,QACLI,YAAY,mBACZH,MAAOf,EAAWH,QAEpB,kBAACV,EAAD,CACE8B,SAAUN,EACVG,KAAK,SACLI,YAAY,oBACZH,MAAOf,EAAWF,SAEpB,kBAACV,EAAD,CACE6B,SAAUN,EACVG,KAAK,WACLI,YAAY,sBACZH,MAAOf,EAAWD,WAEpB,kBAACT,EAAD,CACE6B,WAAYnB,EAAWF,QAAUE,EAAWH,OAC5CuB,QA9Cd,SAA0BR,GACxBA,EAAMS,iBACFrB,EAAWH,OAASG,EAAWF,QACjCK,EAAa,CACXN,MAAOG,EAAWH,MAClBC,OAAQE,EAAWF,OACnBC,SAAUC,EAAWD,WAEpBK,KAAK,IAAMH,EAAc,CACxBJ,MAAO,GACPC,OAAQ,GACRC,SAAU,MAEXK,KAAK,IAAMF,KACXK,MAAMC,GAAOC,QAAQC,IAAIF,MA8BpB,iBAQJ,kBAAC/B,EAAD,CAAKC,KAAK,cACR,kBAAC,EAAD,KACE,iDAEDiB,EAAM2B,OACL,kBAAC,EAAD,KACG3B,EAAMf,IAAI2C,GAEP,kBAACrC,EAAD,CAAUsC,IAAKD,EAAKE,KAClB,uBAAGC,KAAM,UAAYH,EAAKE,KACxB,gCACGF,EAAK1B,MADR,OACmB0B,EAAKzB,SAG1B,kBAAC,EAAD,CAAWsB,QAAS,KAAMO,OAhF1BtD,EAgFqCkD,EAAKE,SA/E5DtB,EAAe9B,GACZ+B,KAAKC,GAAOH,KACZK,MAAMC,GAAOC,QAAQC,IAAIF,IAH9B,IAAoBnC,QAsFR,yDC1GCuD,MAVf,WACE,OACE,yBAAK9D,UAAU,kDACb,uBAAGA,UAAU,eAAe4D,KAAK,KAAjC,wBCQSG,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0dbb7706.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./DeleteBtn.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      âœ—\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from \"react\";\nimport \"./List.css\";\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  })\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => \n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value}) //[name] is not an array you are setting the name variable to change each input with a name in the html imput\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      })\n        .then(() => setFormObject({\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        }))\n        .then(() => loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                onChange={handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n                value={formObject.title}\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n                value={formObject.author}\n              />\n              <TextArea\n                onChange={handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n                value={formObject.synopsis}\n              />\n              <FormBtn\n                disabled={!(formObject.author && formObject.title)}\n                onClick={handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {books.length ? (\n              <List>\n                {books.map(book => {\n                  return (\n                    <ListItem key={book._id}>\n                      <a href={\"/books/\" + book._id}>\n                        <strong>\n                          {book.title} by {book.author}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => deleteBook(book._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Reading List\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport Books from \"./pages/Books\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Books />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}